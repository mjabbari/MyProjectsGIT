{"Name":"Google Mobile Ads for iOS","Id":2772,"Alias":"googleiosmobileads","Description":"Quickly monetize your app with Google AdMob, one of the world\u0027s largest mobile\nadvertising platforms. This SDK features:\n\n* Simplified APIs\n* Access to the latest HTML5 ad units from AdMob\n\nWith this component, developers can easily incorporate Google AdMob ads into their mobile\napps. Mobile-friendly text and image banners are available, along with rich, full-screen\nweb apps known as interstitials. An ever-growing set of \"calls-to-action\" are supported\nin response to user-generated events, including redirection to the App Store, iTunes,\nmapping applications, videos, and the dialer. Ads can be targeted by location and\ndemographic data.","Version":"7.7.1.0","Summary":"Connect with advertisers and show relevant ads in your app. Users click on ads, you make money.","QuickStart":"Quickly monetize your app with Google AdMob, one of the world\u0027s largest mobile\nadvertising platforms. This SDK features:\n\n* Simplified APIs\n* Access to the latest HTML5 ad units from AdMob\n\nWith this component, developers can easily incorporate Google AdMob ads into their mobile\napps. Mobile-friendly text and image banners are available, along with rich, full-screen\nweb apps known as interstitials. An ever-growing set of \"calls-to-action\" are supported\nin response to user-generated events, including redirection to the App Store, iTunes,\nmapping applications, videos, and the dialer. Ads can be targeted by location and\ndemographic data.\n\n## Banners\n\nCreating a banner ad unit and loading the request:\n\n```csharp\nusing Google.MobileAds;\n...\n\nconst string bannerId = \"\u003cGet your ID at google.com/ads/admob\u003e\";\n\nBannerView adView;\nbool viewOnScreen = false;\n\npublic void AddBanner ()\n{\n\t// Setup your BannerView, review AdSizeCons class for more Ad sizes. \n\tadView = new BannerView (size: AdSizeCons.Banner, origin: new CGPoint (-10, 0)) {\n\t\tAdUnitID = bannerId,\n\t\tRootViewController = this\n\t};\n\t\n\t// Wire AdReceived event to know when the Ad is ready to be displayed\n\tadView.AdReceived += (object sender, EventArgs e) =\u003e {\n\t\tif (!viewOnScreen) View.AddSubview (adView);\n\t\tviewOnScreen = true;\n\t};\n\n\tadView.LoadRequest (Request.GetDefaultRequest ());\n}\n```\n\n## Interstitial Ad\n\nCreating an Interstitial ad and loading the request:\n\n```csharp\nusing Google.MobileAds;\n...\n\nconst string intersitialId = \"\u003cGet your ID at google.com/ads/admob\u003e\";\n\nInterstitial adInterstitial;\n\npublic void AddInterstitial ()\n{\n\tadInterstitial = new Interstitial (intersitialId);\n\tadInterstitial.LoadRequest (Request.GetDefaultRequest ());\n\t\n\t// We need to wait until the Intersitial is ready to show\n\tdo {\n\t\tawait Task.Delay (100);\n\t} while (!adInterstitial.IsReady);\n\n\t// Once is ready, show the ad on Main thread\n\tInvokeOnMainThread (() =\u003e adInterstitial.PresentFromRootViewController (navController));\n}\n\n```","Hash":"9b20d80497f157849b279b9663a5e0fb","TargetPlatforms":["ios"],"TrialHash":null}